{"ast":null,"code":"export var MEDIUM_DEVICE_WIDTH = 1025; // pixels\nexport var SMALL_DEVICE_WIDTH = 720; // pixels\nexport var LANDSCAPE_DEVICE_CONDITION = '(min-device-width: 200px) and (max-device-width: 900px) and (max-device-height: 1000px) and (orientation: landscape) and (min-aspect-ratio: 13/9)';\nvar HTTP_PROTOCOL = 'http';\nvar WWW = 'www';\nexport function isIE() {\n  //Check the userAgent property of the window.navigator object\n  var ua = window.navigator.userAgent;\n  // IE 10 or older\n  var msie = ua.indexOf('MSIE ');\n  //IE 11\n  var trident = ua.indexOf('Trident/');\n  return msie > 0 || trident > 0;\n}\nexport function iOS() {\n  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) ||\n  // iPad on iOS 13 detection\n  navigator.userAgent.includes('Mac') && 'ontouchend' in document;\n}\nexport function android() {\n  return ['Android'].includes(navigator.platform) ||\n  // Could also return a version of Linux ARM\n  navigator.platform.includes('Linux');\n}\nexport function isFirefox() {\n  return navigator.userAgent.includes('Firefox');\n}\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') !== -1;\n}\nexport function getWindowDimensions() {\n  var _window = window,\n    width = _window.innerWidth,\n    height = _window.innerHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function openInNewTab(url) {\n  var win = window.open(url, '_blank');\n  if (win) {\n    win.focus();\n  }\n}\n\n/**\n * Prepends the HTTP protocol to a URL if not already present, converting URLs that would be treated as relatives to absolutes, which can then be used to open external links on a new page.\n *\n * @param {string} url - The URL to modify\n * @returns a modified URL with the protocol, used for navigating to a new page.\n */\nexport var prependHTTPProtocol = function prependHTTPProtocol(url) {\n  if (url.startsWith(HTTP_PROTOCOL)) {\n    return url;\n  }\n  if (url.startsWith(WWW)) {\n    return \"\".concat(HTTP_PROTOCOL, \"://\").concat(url); // Secure protocols automatically add the \"s\" if needed\n  }\n  return \"\".concat(HTTP_PROTOCOL, \"://\").concat(WWW, \".\").concat(url);\n};\nexport function isMobile() {\n  return window.innerWidth < MEDIUM_DEVICE_WIDTH;\n}\nvar isUserUsingMobile = function isUserUsingMobile() {\n  // User agent string method\n  var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n  // Screen resolution method\n  if (!isMobile) {\n    var screenWidth = window.screen.width;\n    var screenHeight = window.screen.height;\n    isMobile = screenWidth < 768 || screenHeight < 768;\n  }\n\n  // Touch events method\n  if (!isMobile) {\n    isMobile = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  // CSS media queries method\n  if (!isMobile) {\n    var bodyElement = document.getElementsByTagName('body')[0];\n    isMobile = window.getComputedStyle(bodyElement).getPropertyValue('content').indexOf('mobile') !== -1;\n  }\n  return isMobile;\n};\nexport function isMobileDeviceLandscape() {\n  if (!isMobile() || !isUserUsingMobile()) {\n    return false;\n  }\n  return window.matchMedia ? window.matchMedia('(orientation: landscape)').matches : false;\n}\nexport function removeQueryString() {\n  var currentURL = window.location.href;\n  var updatedURL = currentURL.split('?')[0];\n  window.history.replaceState({}, document.title, updatedURL);\n}","map":{"version":3,"names":["MEDIUM_DEVICE_WIDTH","SMALL_DEVICE_WIDTH","LANDSCAPE_DEVICE_CONDITION","HTTP_PROTOCOL","WWW","isIE","ua","window","navigator","userAgent","msie","indexOf","trident","iOS","includes","platform","document","android","isFirefox","isMac","getWindowDimensions","_window","width","innerWidth","height","innerHeight","openInNewTab","url","win","open","focus","prependHTTPProtocol","startsWith","concat","isMobile","isUserUsingMobile","test","screenWidth","screen","screenHeight","maxTouchPoints","bodyElement","getElementsByTagName","getComputedStyle","getPropertyValue","isMobileDeviceLandscape","matchMedia","matches","removeQueryString","currentURL","location","href","updatedURL","split","history","replaceState","title"],"sources":["/Users/feliperodriguez/Desktop/Git Repos/ricocreations/src/utils/browserUtils.ts"],"sourcesContent":["export const MEDIUM_DEVICE_WIDTH = 1025; // pixels\nexport const SMALL_DEVICE_WIDTH = 720; // pixels\nexport const LANDSCAPE_DEVICE_CONDITION =\n    '(min-device-width: 200px) and (max-device-width: 900px) and (max-device-height: 1000px) and (orientation: landscape) and (min-aspect-ratio: 13/9)';\n\nconst HTTP_PROTOCOL = 'http';\nconst WWW = 'www';\n\nexport function isIE(): boolean {\n    //Check the userAgent property of the window.navigator object\n    const ua = window.navigator.userAgent;\n    // IE 10 or older\n    const msie = ua.indexOf('MSIE ');\n    //IE 11\n    const trident = ua.indexOf('Trident/');\n\n    return msie > 0 || trident > 0;\n}\n\nexport function iOS(): boolean {\n    return (\n        ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(\n            navigator.platform\n        ) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function android(): boolean {\n    return (\n        ['Android'].includes(navigator.platform) ||\n        // Could also return a version of Linux ARM\n        navigator.platform.includes('Linux')\n    );\n}\n\nexport function isFirefox(): boolean {\n    return navigator.userAgent.includes('Firefox');\n}\n\nexport function isMac(): boolean {\n    return navigator.userAgent.indexOf('Mac OS X') !== -1;\n}\n\nexport function getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport function openInNewTab(url: string) {\n    var win = window.open(url, '_blank');\n    if (win) {\n        win.focus();\n    }\n}\n\n/**\n * Prepends the HTTP protocol to a URL if not already present, converting URLs that would be treated as relatives to absolutes, which can then be used to open external links on a new page.\n *\n * @param {string} url - The URL to modify\n * @returns a modified URL with the protocol, used for navigating to a new page.\n */\nexport const prependHTTPProtocol = (url: string): string => {\n    if (url.startsWith(HTTP_PROTOCOL)) {\n        return url;\n    }\n    if (url.startsWith(WWW)) {\n        return `${HTTP_PROTOCOL}://${url}`; // Secure protocols automatically add the \"s\" if needed\n    }\n    return `${HTTP_PROTOCOL}://${WWW}.${url}`;\n};\n\nexport function isMobile() {\n    return window.innerWidth < MEDIUM_DEVICE_WIDTH;\n}\n\nconst isUserUsingMobile = () => {\n    // User agent string method\n    let isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n    // Screen resolution method\n    if (!isMobile) {\n        let screenWidth = window.screen.width;\n        let screenHeight = window.screen.height;\n        isMobile = screenWidth < 768 || screenHeight < 768;\n    }\n\n    // Touch events method\n    if (!isMobile) {\n        isMobile = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n\n    // CSS media queries method\n    if (!isMobile) {\n        let bodyElement = document.getElementsByTagName('body')[0];\n        isMobile = window.getComputedStyle(bodyElement).getPropertyValue('content').indexOf('mobile') !== -1;\n    }\n\n    return isMobile;\n};\n\nexport function isMobileDeviceLandscape() {\n    if (!isMobile() || !isUserUsingMobile()) {\n        return false;\n    }\n\n    return window.matchMedia ? window.matchMedia('(orientation: landscape)').matches : false;\n}\n\nexport function removeQueryString() {\n    var currentURL = window.location.href;\n    var updatedURL = currentURL.split('?')[0];\n    window.history.replaceState({}, document.title, updatedURL);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}