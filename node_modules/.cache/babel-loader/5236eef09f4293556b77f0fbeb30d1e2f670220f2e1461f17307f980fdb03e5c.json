{"ast":null,"code":"import _toConsumableArray from \"/Users/feliperodriguez/Desktop/Git Repos/ricocreations/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/feliperodriguez/Desktop/Git Repos/ricocreations/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/feliperodriguez/Desktop/Git Repos/ricocreations/src/components/Notification/NotificationProvider.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { NotificationContext } from '../../contexts/NotificationContext';\nimport NotificationContainer from './NotificationContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar id = 1;\nvar NotificationProvider = function NotificationProvider(_ref) {\n  _s();\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var addNotification = useCallback(function (content, type) {\n    setNotifications(function (notifications) {\n      return [].concat(_toConsumableArray(notifications), [{\n        id: id++,\n        type: type,\n        content: content\n      }]);\n    });\n  }, [setNotifications]);\n  var removeNotification = useCallback(function (id) {\n    setNotifications(function (notifications) {\n      return notifications.filter(function (t) {\n        return t.id !== id;\n      });\n    });\n  }, [setNotifications]);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      addNotification: addNotification,\n      removeNotification: removeNotification\n    },\n    children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {\n      notifications: notifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n_s(NotificationProvider, \"IucX5uWvAbdKPMD9oa4Idz5AvMc=\");\n_c = NotificationProvider;\nexport default NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","useState","useCallback","NotificationContext","NotificationContainer","jsxDEV","_jsxDEV","id","NotificationProvider","_ref","_s","children","_useState","_useState2","_slicedToArray","notifications","setNotifications","addNotification","content","type","concat","_toConsumableArray","removeNotification","filter","t","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/feliperodriguez/Desktop/Git Repos/ricocreations/src/components/Notification/NotificationProvider.tsx"],"sourcesContent":["import React, { useState, useCallback, ReactNode } from 'react';\nimport { NotificationContext } from '../../contexts/NotificationContext';\nimport NotificationContainer from './NotificationContainer';\n\nexport interface NotificationModel {\n    id: number;\n    type: 'success' | 'error';\n    content: string | ReactNode;\n}\n\nlet id = 1;\n\nconst NotificationProvider: React.FC = ({ children }) => {\n    const [notifications, setNotifications] = useState<NotificationModel[]>([]);\n\n    const addNotification = useCallback(\n        (content, type) => {\n            setNotifications((notifications) => [\n                ...notifications,\n                {\n                    id: id++,\n                    type,\n                    content\n                }\n            ]);\n        },\n        [setNotifications]\n    );\n\n    const removeNotification = useCallback(\n        (id: number) => {\n            setNotifications((notifications) => notifications.filter((t) => t.id !== id));\n        },\n        [setNotifications]\n    );\n\n    return (\n        <NotificationContext.Provider value={{ addNotification, removeNotification }}>\n            <NotificationContainer notifications={notifications} />\n            {children}\n        </NotificationContext.Provider>\n    );\n};\n\nexport default NotificationProvider;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAmB,OAAO;AAC/D,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5D,IAAIC,EAAE,GAAG,CAAC;AAEV,IAAMC,oBAA8B,GAAG,SAAjCA,oBAA8BA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAAfC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAC9C,IAAAC,SAAA,GAA0CX,QAAQ,CAAsB,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApEG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,eAAe,GAAGf,WAAW,CAC/B,UAACgB,OAAO,EAAEC,IAAI,EAAK;IACfH,gBAAgB,CAAC,UAACD,aAAa;MAAA,UAAAK,MAAA,CAAAC,kBAAA,CACxBN,aAAa,IAChB;QACIR,EAAE,EAAEA,EAAE,EAAE;QACRY,IAAI,EAAJA,IAAI;QACJD,OAAO,EAAPA;MACJ,CAAC;IAAA,CACJ,CAAC;EACN,CAAC,EACD,CAACF,gBAAgB,CACrB,CAAC;EAED,IAAMM,kBAAkB,GAAGpB,WAAW,CAClC,UAACK,EAAU,EAAK;IACZS,gBAAgB,CAAC,UAACD,aAAa;MAAA,OAAKA,aAAa,CAACQ,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACjB,EAAE,KAAKA,EAAE;MAAA,EAAC;IAAA,EAAC;EACjF,CAAC,EACD,CAACS,gBAAgB,CACrB,CAAC;EAED,oBACIV,OAAA,CAACH,mBAAmB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe,EAAfA,eAAe;MAAEK,kBAAkB,EAAlBA;IAAmB,CAAE;IAAAX,QAAA,gBACzEL,OAAA,CAACF,qBAAqB;MAACW,aAAa,EAAEA;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EACtDpB,QAAQ;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACiB,CAAC;AAEvC,CAAC;AAACrB,EAAA,CA9BIF,oBAA8B;AAAAwB,EAAA,GAA9BxB,oBAA8B;AAgCpC,eAAeA,oBAAoB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}