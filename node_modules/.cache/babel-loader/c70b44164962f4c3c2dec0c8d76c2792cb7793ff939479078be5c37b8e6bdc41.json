{"ast":null,"code":"import _classCallCheck from \"/Users/feliperodriguez/Desktop/Git Repos/ricocreations/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/feliperodriguez/Desktop/Git Repos/ricocreations/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport jwt from 'jsonwebtoken';\nexport var TokenUtils = /*#__PURE__*/function () {\n  function TokenUtils() {\n    _classCallCheck(this, TokenUtils);\n  }\n  return _createClass(TokenUtils, null, [{\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      var refreshToken = null;\n      var authToken = TokenUtils.getAuthToken();\n      if (authToken !== null) {\n        refreshToken = authToken.refresh_token;\n      }\n      return refreshToken;\n    }\n  }, {\n    key: \"saveRefreshToken\",\n    value: function saveRefreshToken(refreshToken) {\n      var authToken = TokenUtils.getAuthToken();\n      if (authToken !== null) {\n        authToken.refresh_token = refreshToken;\n      }\n    }\n  }, {\n    key: \"isTokenExpired\",\n    value: function isTokenExpired() {\n      var isExpired = true;\n      var authToken = TokenUtils.getAuthToken();\n      if (authToken !== null) {\n        var now = new Date();\n        var expires = new Date(authToken['.expires']);\n        isExpired = expires <= now;\n      }\n      return isExpired;\n    }\n  }, {\n    key: \"isJwtTokenExpired\",\n    value: function isJwtTokenExpired() {\n      var jwtToken = TokenUtils.getJwtToken();\n      if (!jwtToken) return true;\n      return jwtToken !== null && !(jwtToken.exp && jwtToken.exp > Date.now() / 1000);\n    }\n  }, {\n    key: \"saveAuthToken\",\n    value: function saveAuthToken(authToken) {\n      window.localStorage.setItem(TokenUtils.AUTH_TOKEN_KEY, JSON.stringify({\n        authToken: authToken\n      }));\n    }\n  }, {\n    key: \"removeAuthToken\",\n    value: function removeAuthToken() {\n      window.localStorage.removeItem(TokenUtils.AUTH_TOKEN_KEY);\n    }\n  }, {\n    key: \"saveJwtToken\",\n    value: function saveJwtToken(jwtToken) {\n      window.localStorage.setItem(TokenUtils.JWT_TOKEN_KEY, jwtToken);\n    }\n  }, {\n    key: \"removeJwtToken\",\n    value: function removeJwtToken() {\n      window.localStorage.removeItem(TokenUtils.JWT_TOKEN_KEY);\n    }\n  }, {\n    key: \"getAuthToken\",\n    value: function getAuthToken() {\n      var authToken = null;\n      var storedAuthToken = window.localStorage.getItem(TokenUtils.AUTH_TOKEN_KEY);\n      if (storedAuthToken !== null) {\n        try {\n          var parsedAuthToken = JSON.parse(storedAuthToken).authToken;\n          if (parsedAuthToken) {\n            authToken = parsedAuthToken;\n          }\n        } catch (error) {\n          console.error('Could not parse token!');\n        }\n      }\n      return authToken;\n    }\n  }, {\n    key: \"getJwtTokenString\",\n    value: function getJwtTokenString() {\n      return window.localStorage.getItem(TokenUtils.JWT_TOKEN_KEY);\n    }\n  }, {\n    key: \"getJwtToken\",\n    value: function getJwtToken() {\n      var tokenContent = null;\n      var storedJwtToken = window.localStorage.getItem(TokenUtils.JWT_TOKEN_KEY);\n      if (storedJwtToken !== null) {\n        tokenContent = jwt.decode(storedJwtToken);\n      }\n      return tokenContent;\n    }\n  }]);\n}();\nTokenUtils.AUTH_TOKEN_KEY = 'authToken';\nTokenUtils.JWT_TOKEN_KEY = 'jwt';","map":{"version":3,"names":["jwt","TokenUtils","_classCallCheck","_createClass","key","value","getRefreshToken","refreshToken","authToken","getAuthToken","refresh_token","saveRefreshToken","isTokenExpired","isExpired","now","Date","expires","isJwtTokenExpired","jwtToken","getJwtToken","exp","saveAuthToken","window","localStorage","setItem","AUTH_TOKEN_KEY","JSON","stringify","removeAuthToken","removeItem","saveJwtToken","JWT_TOKEN_KEY","removeJwtToken","storedAuthToken","getItem","parsedAuthToken","parse","error","console","getJwtTokenString","tokenContent","storedJwtToken","decode"],"sources":["/Users/feliperodriguez/Desktop/Git Repos/ricocreations/src/utils/TokenUtils.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nimport { IOmniAuthToken } from '../models/auth/IOmniAuthToken';\nimport { IMyBuildJSONWebToken } from '../models/auth/IMyBuildJsonWebToken';\n\nexport class TokenUtils {\n    public static getRefreshToken(): string | null {\n        let refreshToken: string | null = null;\n        const authToken: IOmniAuthToken | null = TokenUtils.getAuthToken();\n        if (authToken !== null) {\n            refreshToken = authToken.refresh_token;\n        }\n        return refreshToken;\n    }\n\n    public static saveRefreshToken(refreshToken: string) {\n        const authToken: IOmniAuthToken | null = TokenUtils.getAuthToken();\n        if (authToken !== null) {\n            authToken.refresh_token = refreshToken;\n        }\n    }\n\n    public static isTokenExpired(): boolean {\n        let isExpired: boolean = true;\n\n        const authToken: IOmniAuthToken | null = TokenUtils.getAuthToken();\n        if (authToken !== null) {\n            const now = new Date();\n            const expires = new Date(authToken['.expires']);\n            isExpired = expires <= now;\n        }\n\n        return isExpired;\n    }\n\n    public static isJwtTokenExpired(): boolean {\n        const jwtToken: IMyBuildJSONWebToken | null = TokenUtils.getJwtToken();\n\n        if (!jwtToken) return true;\n\n        return jwtToken !== null && !(jwtToken.exp && jwtToken.exp > Date.now() / 1000);\n    }\n\n    public static saveAuthToken(authToken: IOmniAuthToken) {\n        window.localStorage.setItem(TokenUtils.AUTH_TOKEN_KEY, JSON.stringify({ authToken }));\n    }\n\n    public static removeAuthToken() {\n        window.localStorage.removeItem(TokenUtils.AUTH_TOKEN_KEY);\n    }\n\n    public static saveJwtToken(jwtToken: string) {\n        window.localStorage.setItem(TokenUtils.JWT_TOKEN_KEY, jwtToken);\n    }\n\n    public static removeJwtToken() {\n        window.localStorage.removeItem(TokenUtils.JWT_TOKEN_KEY);\n    }\n\n    public static getAuthToken(): IOmniAuthToken | null {\n        let authToken: IOmniAuthToken | null = null;\n        const storedAuthToken: string | null = window.localStorage.getItem(TokenUtils.AUTH_TOKEN_KEY);\n        if (storedAuthToken !== null) {\n            try {\n                const parsedAuthToken: IOmniAuthToken = JSON.parse(storedAuthToken).authToken;\n                if (parsedAuthToken) {\n                    authToken = parsedAuthToken;\n                }\n            } catch (error) {\n                console.error('Could not parse token!');\n            }\n        }\n        return authToken;\n    }\n\n    public static getJwtTokenString(): string | null {\n        return window.localStorage.getItem(TokenUtils.JWT_TOKEN_KEY);\n    }\n\n    public static getJwtToken(): IMyBuildJSONWebToken | null {\n        let tokenContent: IMyBuildJSONWebToken | null = null;\n        const storedJwtToken: string | null = window.localStorage.getItem(TokenUtils.JWT_TOKEN_KEY);\n        if (storedJwtToken !== null) {\n            tokenContent = jwt.decode(storedJwtToken) as IMyBuildJSONWebToken;\n        }\n\n        return tokenContent;\n    }\n\n    private static readonly AUTH_TOKEN_KEY: string = 'authToken';\n    private static readonly JWT_TOKEN_KEY: string = 'jwt';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}