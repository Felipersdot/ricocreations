{"ast":null,"code":"import React,{useEffect,useState}from'react';import thirdParty from'../../../api/thirdParty';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Dispensary=()=>{const[helper,setHelper]=useState([]);const getPokemonList=async()=>{try{const response=(await thirdParty.pokemon.getList()).data.results;setHelper(response);console.log(response);}catch(e){console.error(e);}finally{}};useEffect(()=>{console.log('hello there');const helpMe=async()=>{await getPokemonList();};helpMe();},[helper]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:helper.map(c=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[c.name,/*#__PURE__*/_jsx(\"br\",{})]});})}),\"indeed we are the gods of the new worlds\"]});};export default Dispensary;","map":{"version":3,"names":["React","useEffect","useState","thirdParty","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Dispensary","helper","setHelper","getPokemonList","response","pokemon","getList","data","results","console","log","e","error","helpMe","children","map","c","name"],"sources":["/Users/feliperodriguez/Desktop/Git Repos/ricocreations/src/components/Pages/Dispensary/Dispensary.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport thirdParty from '../../../api/thirdParty';\n\nconst Dispensary = () => {\n    const [helper, setHelper] = useState<string[]>([]);\n\n    const getPokemonList = async () => {\n        try {\n            const response = (await thirdParty.pokemon.getList()).data.results;\n            setHelper(response);\n            console.log(response);\n        } catch (e) {\n            console.error(e);\n        } finally {\n        }\n    };\n\n    useEffect(() => {\n        console.log('hello there');\n        const helpMe = async () => {\n            await getPokemonList();\n        };\n        helpMe();\n    }, [helper]);\n\n    return (\n        <>\n            <div>\n                {helper.map((c: any) => {\n                    return (\n                        <>\n                            {c.name}\n                            <br />\n                        </>\n                    );\n                })}\n            </div>\n            indeed we are the gods of the new worlds\n        </>\n    );\n};\n\nexport default Dispensary;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAW,EAAE,CAAC,CAElD,KAAM,CAAAW,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,KAAM,CAAAX,UAAU,CAACY,OAAO,CAACC,OAAO,CAAC,CAAC,EAAEC,IAAI,CAACC,OAAO,CAClEN,SAAS,CAACE,QAAQ,CAAC,CACnBK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC,CACzB,CAAE,MAAOO,CAAC,CAAE,CACRF,OAAO,CAACG,KAAK,CAACD,CAAC,CAAC,CACpB,CAAC,OAAS,CACV,CACJ,CAAC,CAEDpB,SAAS,CAAC,IAAM,CACZkB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1B,KAAM,CAAAG,MAAM,CAAG,KAAAA,CAAA,GAAY,CACvB,KAAM,CAAAV,cAAc,CAAC,CAAC,CAC1B,CAAC,CACDU,MAAM,CAAC,CAAC,CACZ,CAAC,CAAE,CAACZ,MAAM,CAAC,CAAC,CAEZ,mBACIF,KAAA,CAAAF,SAAA,EAAAiB,QAAA,eACInB,IAAA,QAAAmB,QAAA,CACKb,MAAM,CAACc,GAAG,CAAEC,CAAM,EAAK,CACpB,mBACIjB,KAAA,CAAAF,SAAA,EAAAiB,QAAA,EACKE,CAAC,CAACC,IAAI,cACPtB,IAAA,QAAK,CAAC,EACR,CAAC,CAEX,CAAC,CAAC,CACD,CAAC,2CAEV,EAAE,CAAC,CAEX,CAAC,CAED,cAAe,CAAAK,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}